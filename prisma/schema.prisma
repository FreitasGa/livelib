// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Client {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  phone     String   @unique
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  rents     Rent[]

  @@map("client")
}

model Book {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  author      String
  description String
  price       Int
  stock       Int
  genres      Genre[]  @relation(fields: [genreIds], references: [id])
  genreIds    String[] @db.ObjectId
  rents       Rent[]   @relation(fields: [rentIds], references: [id])
  rentIds     String[] @db.ObjectId
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("book")
}

model Genre {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  books     Book[]   @relation(fields: [bookIds], references: [id])
  bookIds   String[] @db.ObjectId
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("genre")
}

model Rent {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  price     Int
  client    Client   @relation(fields: [clientId], references: [id])
  clientId  String   @db.ObjectId
  bookIds   String[] @db.ObjectId
  books     Book[]   @relation(fields: [bookIds], references: [id])
  startDate DateTime
  endDate   DateTime
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("rent")
}
